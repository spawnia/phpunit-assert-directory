# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: "Continuous Integration"

jobs:
  coding-standards:
    name: "Coding Standards"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: "mbstring"
          php-version: 7.3

      - name: "Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run localheinz/composer-normalize"
        run: composer normalize --dry-run

  static-code-analysis:
    name: "Static Code Analysis"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: "mbstring"
          php-version: 7.3

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run phpstan/phpstan"
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon

  tests:
    name: "Tests"

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 7.3
          - 7.4
          - 8.0
          - 8.1
          - 8.2

        dependencies:
          - lowest
          - locked
          - highest

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: "mbstring"
          php-version: ${{ matrix.php-version }}

      - name: "Install lowest dependencies with composer"
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-lowest --no-interaction --no-progress --no-suggest

      - name: "Install locked dependencies with composer"
        if: matrix.dependencies == 'locked'
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Install highest dependencies with composer"
        if: matrix.dependencies == 'highest'
        run: composer update --no-interaction --no-progress --no-suggest

      - name: "Run unit tests with phpunit/phpunit"
        run: vendor/bin/phpunit

  code-coverage:
    name: "Code Coverage"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: "mbstring"
          php-version: 7.3

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Dump Xdebug filter with phpunit/phpunit"
        run: vendor/bin/phpunit --dump-xdebug-filter=.build/phpunit/xdebug-filter.php

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: vendor/bin/phpunit --coverage-clover=build/logs/clover.xml --prepend=.build/phpunit/xdebug-filter.php

      # Not using codecov/codecov-action for now, as the build is prohibitively slow
      - name: "Download code coverage uploader for Codecov.io"
        run: curl -s https://codecov.io/bash -o codecov

      - name: "Send code coverage report to Codecov.io"
        run: bash codecov -t ${{ secrets.CODECOV_TOKEN }}

  mutation-tests:
    name: "Mutation Tests"

    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - name: "Install PHP with extensions"
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          extensions: "mbstring"
          php-version: 7.3

      - name: "Install locked dependencies with composer"
        run: composer install --no-interaction --no-progress --no-suggest

      - name: "Run mutation tests with infection/infection"
        run: vendor/bin/infection --ignore-msi-with-no-mutations --min-covered-msi=37 --min-msi=37
